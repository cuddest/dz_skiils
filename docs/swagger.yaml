definitions:
  controllers.ExamAnswer:
    properties:
      answer:
        type: integer
      quizz_id:
        type: integer
    type: object
  controllers.TokenRequest:
    properties:
      email:
        description: Can be either email or username
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  models.Answer:
    properties:
      Answer:
        type: string
      ID:
        type: integer
      question:
        $ref: '#/definitions/models.Question'
      question_id:
        type: integer
    type: object
  models.Article:
    properties:
      Description:
        type: string
      ID:
        type: integer
      Link:
        type: string
      Title:
        type: string
      course:
        $ref: '#/definitions/models.Course'
      course_id:
        type: integer
    type: object
  models.Category:
    properties:
      ID:
        type: integer
      Name:
        type: string
      courses:
        items:
          $ref: '#/definitions/models.Course'
        type: array
      subCats:
        items:
          $ref: '#/definitions/models.SubCat'
        type: array
    type: object
  models.Course:
    properties:
      Description:
        type: string
      Duration:
        type: string
      ID:
        type: integer
      Image:
        type: string
      Language:
        type: string
      Level:
        type: string
      Name:
        type: string
      Pricing:
        type: string
      articles:
        items:
          $ref: '#/definitions/models.Article'
        type: array
      category:
        $ref: '#/definitions/models.Category'
      category_id:
        type: integer
      courseQuizz:
        items:
          $ref: '#/definitions/models.CourseQuizz'
        type: array
      crating:
        items:
          $ref: '#/definitions/models.Crating'
        type: array
      questions:
        items:
          $ref: '#/definitions/models.Question'
        type: array
      student:
        items:
          $ref: '#/definitions/models.Student'
        type: array
      teacher:
        $ref: '#/definitions/models.Teacher'
      teacher_id:
        type: integer
      videos:
        items:
          $ref: '#/definitions/models.Video'
        type: array
    type: object
  models.CourseQuizz:
    properties:
      Answer:
        type: string
      ID:
        type: integer
      Option1:
        type: string
      Option2:
        type: string
      Option3:
        type: string
      Option4:
        type: string
      Question:
        type: string
      course:
        $ref: '#/definitions/models.Course'
      exam_id:
        type: integer
    type: object
  models.Crating:
    properties:
      course_id:
        type: integer
      rating:
        type: number
      student_id:
        type: integer
    type: object
  models.Exam:
    properties:
      Description:
        type: string
      ID:
        type: integer
      course:
        allOf:
        - $ref: '#/definitions/models.Course'
        description: One-to-one relationship with Course
      course_id:
        description: Ensure that each exam is linked to one course
        type: integer
      examQuizzes:
        items:
          $ref: '#/definitions/models.ExamQuizz'
        type: array
    type: object
  models.ExamQuizz:
    properties:
      Answer:
        type: integer
      ID:
        type: integer
      Option1:
        type: string
      Option2:
        type: string
      Option3:
        type: string
      Option4:
        type: string
      Question:
        type: string
      exam:
        $ref: '#/definitions/models.Exam'
      exam_id:
        type: integer
    type: object
  models.Feedback:
    properties:
      Description:
        type: string
      ID:
        type: integer
      Review:
        type: integer
      student:
        $ref: '#/definitions/models.Student'
      student_id:
        type: integer
    type: object
  models.Question:
    properties:
      answers:
        items:
          $ref: '#/definitions/models.Answer'
        type: array
      course_id:
        type: integer
      id:
        type: integer
      rating:
        type: string
      student_id:
        type: integer
    type: object
  models.Student:
    properties:
      FullName:
        type: string
      ID:
        type: integer
      Password:
        type: string
      Picture:
        type: string
      courses:
        items:
          $ref: '#/definitions/models.Course'
        type: array
      email:
        type: string
      feedback:
        items:
          $ref: '#/definitions/models.Feedback'
        type: array
      questions:
        items:
          $ref: '#/definitions/models.Question'
        type: array
      username:
        type: string
    type: object
  models.StudentCourse:
    properties:
      certificate:
        type: string
      courseID:
        type: integer
      enrollment:
        type: string
      grade:
        type: string
      issued:
        type: boolean
      studentID:
        type: integer
    type: object
  models.SubCat:
    properties:
      ID:
        type: integer
      Name:
        type: string
      category:
        $ref: '#/definitions/models.Category'
      category_id:
        type: integer
    type: object
  models.Teacher:
    properties:
      Degree:
        type: string
      Experience:
        type: string
      FullName:
        type: string
      ID:
        type: integer
      Password:
        type: string
      Picture:
        type: string
      Skills:
        type: string
      courses:
        items:
          $ref: '#/definitions/models.Course'
        type: array
      email:
        type: string
      username:
        type: string
    type: object
  models.Video:
    properties:
      ID:
        type: integer
      Link:
        type: string
      Title:
        type: string
      course:
        $ref: '#/definitions/models.Course'
      course_id:
        type: integer
    type: object
host: https://dzskiils-production.up.railway.app/
info:
  contact:
    email: a_touati@estin.dz
    name: Support Team
  description: API for managing teachers, students, courses, and more in the DZ Skills
    Online Teaching platform.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: DZ Skills API
  version: "1.0"
paths:
  /Courses/DeleteCourse:
    delete:
      consumes:
      - application/json
      description: Delete a course by ID
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete course
      tags:
      - courses
  /Courses/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Course'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all courses
      tags:
      - courses
  /Courses/get:
    post:
      consumes:
      - application/json
      description: Retrieve a course by its ID
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Course'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get course by ID
      tags:
      - courses
  /Courses/updateCourse:
    put:
      consumes:
      - application/json
      description: Update an existing course
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      - description: Course object
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/models.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Course'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update course
      tags:
      - courses
  /answers/DeleteAnswer:
    delete:
      consumes:
      - application/json
      description: Delete an answer by its ID
      parameters:
      - description: Answer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Answer'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an answer
      tags:
      - answers
  /answers/GetAllAnswer:
    get:
      consumes:
      - application/json
      description: Retrieve all answers from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Answer'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all answers
      tags:
      - answers
  /answers/GetAnswer:
    post:
      consumes:
      - application/json
      description: Get an answer by its ID
      parameters:
      - description: Answer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Answer'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a specific answer
      tags:
      - answers
  /answers/UpdateAnswer:
    put:
      consumes:
      - application/json
      description: Update an existing answer by its ID
      parameters:
      - description: Answer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated answer object
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/models.Answer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Answer'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update an answer
      tags:
      - answers
  /articles/DeleteArticle:
    delete:
      consumes:
      - application/json
      description: Delete an article by its ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an article
      tags:
      - articles
  /articles/GetArticlesByCourse:
    post:
      consumes:
      - application/json
      description: Get all articles for a specific course
      parameters:
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Article'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get articles by course
      tags:
      - articles
  /articles/all:
    get:
      consumes:
      - application/json
      description: Retrieve all articles from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Article'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all articles
      tags:
      - articles
  /articles/createArticle:
    post:
      consumes:
      - application/json
      description: Create a new article for a specific course
      parameters:
      - description: Article object to be created
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Article'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new article
      tags:
      - articles
  /articles/get:
    post:
      consumes:
      - application/json
      description: Get an article by its ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a specific article
      tags:
      - articles
  /articles/updateArticle:
    put:
      consumes:
      - application/json
      description: Update an existing article by its ID
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated article object
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update an article
      tags:
      - articles
  /categories/DeleteCategory:
    delete:
      consumes:
      - application/json
      description: Delete a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a category
      tags:
      - categories
  /categories/all:
    get:
      consumes:
      - application/json
      description: Retrieve all categories with their subcategories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all categories
      tags:
      - categories
  /categories/createCategory:
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category object to be created
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new category
      tags:
      - categories
  /categories/get:
    post:
      consumes:
      - application/json
      description: Get a category by its ID, including its subcategories
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a specific category
      tags:
      - categories
  /categories/updateCategory:
    put:
      consumes:
      - application/json
      description: Update an existing category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated category object
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a category
      tags:
      - categories
  /coursequizzs/DeleteCourseQuizz:
    delete:
      consumes:
      - application/json
      description: Delete a quiz by ID
      parameters:
      - description: Quiz ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete quiz
      tags:
      - quizzes
  /coursequizzs/GetQuizzesByCourse:
    post:
      consumes:
      - application/json
      description: Retrieve all quizzes for a specific course
      parameters:
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CourseQuizz'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get quizzes by course
      tags:
      - quizzes
  /coursequizzs/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all quizzes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CourseQuizz'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all quizzes
      tags:
      - quizzes
  /coursequizzs/createCourseQuizz:
    post:
      consumes:
      - application/json
      description: Create a new quiz
      parameters:
      - description: Quiz object
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/models.CourseQuizz'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CourseQuizz'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create new quiz
      tags:
      - quizzes
  /coursequizzs/get:
    post:
      consumes:
      - application/json
      description: Retrieve a quiz by its ID
      parameters:
      - description: Quiz ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourseQuizz'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get quiz by ID
      tags:
      - quizzes
  /coursequizzs/updateCourseQuizz:
    put:
      consumes:
      - application/json
      description: Update an existing quiz
      parameters:
      - description: Quiz ID
        in: path
        name: id
        required: true
        type: integer
      - description: Quiz object
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/models.CourseQuizz'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CourseQuizz'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update quiz
      tags:
      - quizzes
  /cratings/GetCourseAverageRating:
    post:
      consumes:
      - application/json
      description: Get the average rating for a specific course
      parameters:
      - description: Course ID
        in: path
        name: course_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get course average rating
      tags:
      - ratings
  /cratings/GetCratingByCourseAndStudent:
    post:
      consumes:
      - application/json
      description: Retrieve a specific rating by course and student IDs
      parameters:
      - description: Course ID
        in: path
        name: course_id
        required: true
        type: integer
      - description: Student ID
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Crating'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get rating by course and student
      tags:
      - ratings
  /cratings/GetCratingsByCourse:
    post:
      consumes:
      - application/json
      description: Retrieve all ratings for a specific course
      parameters:
      - description: Course ID
        in: path
        name: course_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Crating'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get ratings by course
      tags:
      - ratings
  /cratings/GetCratingsByStudent:
    post:
      consumes:
      - application/json
      description: Retrieve all ratings for a specific student
      parameters:
      - description: Student ID
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Crating'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get ratings by student
      tags:
      - ratings
  /cratings/createCrating:
    post:
      consumes:
      - application/json
      description: Create a new course rating
      parameters:
      - description: Rating object
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/models.Crating'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Crating'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create new rating
      tags:
      - ratings
  /cratings/updateCrating:
    put:
      consumes:
      - application/json
      description: Update an existing rating
      parameters:
      - description: Rating object
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/models.Crating'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update rating
      tags:
      - ratings
  /examquizzes/GetExamQuizzesByExam:
    post:
      consumes:
      - application/json
      description: Get all quizzes for a specific exam
      parameters:
      - description: Exam ID
        in: body
        name: examId
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ExamQuizz'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get exam quizzes by exam
      tags:
      - examquizzes
  /examquizzes/createExamQuiz:
    post:
      consumes:
      - application/json
      description: Create a new exam quiz in the system
      parameters:
      - description: Exam Quiz object
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/models.ExamQuizz'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ExamQuizz'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create new exam quiz
      tags:
      - examquizzes
  /examquizzes/get:
    post:
      consumes:
      - application/json
      description: Get a specific exam quiz by its ID
      parameters:
      - description: Exam Quiz ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ExamQuizz'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get exam quiz by ID
      tags:
      - examquizzes
  /examquizzes/updateExamQuiz:
    put:
      consumes:
      - application/json
      description: Update an existing exam quiz
      parameters:
      - description: Updated exam quiz object
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/models.ExamQuizz'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ExamQuizz'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update exam quiz
      tags:
      - examquizzes
  /exams/DeleteExam:
    delete:
      consumes:
      - application/json
      description: Delete an exam by its ID
      parameters:
      - description: Exam ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete exam
      tags:
      - exams
  /exams/GetExamsByCourse:
    post:
      consumes:
      - application/json
      description: Get all exams for a specific course
      parameters:
      - description: Course ID
        in: body
        name: courseId
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Exam'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get exams by course
      tags:
      - exams
  /exams/all:
    get:
      consumes:
      - application/json
      description: Retrieve all exams from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Exam'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all exams
      tags:
      - exams
  /exams/createExam:
    post:
      consumes:
      - application/json
      description: Create a new exam in the system
      parameters:
      - description: Exam object
        in: body
        name: exam
        required: true
        schema:
          $ref: '#/definitions/models.Exam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Exam'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create new exam
      tags:
      - exams
  /exams/get:
    post:
      consumes:
      - application/json
      description: Get a specific exam by its ID
      parameters:
      - description: Exam ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Exam'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get exam by ID
      tags:
      - exams
  /exams/updateExam:
    put:
      consumes:
      - application/json
      description: Update an existing exam
      parameters:
      - description: Updated exam object
        in: body
        name: exam
        required: true
        schema:
          $ref: '#/definitions/models.Exam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Exam'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update exam
      tags:
      - exams
  /feedbacks/DeleteFeedback:
    delete:
      consumes:
      - application/json
      description: Delete a feedback by its ID
      parameters:
      - description: Feedback ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete feedback
      tags:
      - feedbacks
  /feedbacks/all:
    get:
      consumes:
      - application/json
      description: Retrieve all feedbacks from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Feedback'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all feedbacks
      tags:
      - feedbacks
  /feedbacks/createFeedback:
    post:
      consumes:
      - application/json
      description: Create a new feedback in the system
      parameters:
      - description: Feedback object
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/models.Feedback'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Feedback'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create new feedback
      tags:
      - feedbacks
  /feedbacks/get:
    post:
      consumes:
      - application/json
      description: Get a specific feedback by its ID
      parameters:
      - description: Feedback ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Feedback'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get feedback by ID
      tags:
      - feedbacks
  /feedbacks/getFeedbacksByStudent:
    post:
      consumes:
      - application/json
      description: Get all feedbacks for a specific student
      parameters:
      - description: Student ID
        in: body
        name: studentId
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Feedback'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get feedbacks by student
      tags:
      - feedbacks
  /feedbacks/updateFeedback:
    put:
      consumes:
      - application/json
      description: Update an existing feedback
      parameters:
      - description: Updated feedback object
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/models.Feedback'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Feedback'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update feedback
      tags:
      - feedbacks
  /questions/GetAnswersByQuestion:
    post:
      consumes:
      - application/json
      description: Get all answers for a specific question
      parameters:
      - description: Question ID
        in: path
        name: questionId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Answer'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get answers by question
      tags:
      - answers
  /questions/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all questions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Question'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all questions
      tags:
      - questions
  /questions/createQuestion:
    post:
      consumes:
      - application/json
      description: Create a new question in the system
      parameters:
      - description: Question information
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/models.Question'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new question
      tags:
      - questions
  /questions/get:
    post:
      consumes:
      - application/json
      description: Retrieve a question by its ID
      parameters:
      - description: Question ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Question'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get question by ID
      tags:
      - questions
  /student_courses/DeleteStudentCourse:
    delete:
      consumes:
      - application/json
      description: Delete a student course enrollment
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: integer
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Answer'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete student course enrollment
      tags:
      - student-courses
  /student_courses/SubmitExamAnswers:
    post:
      consumes:
      - application/json
      description: Submit and grade student exam answers
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: integer
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      - description: Array of exam answers
        in: body
        name: answers
        required: true
        schema:
          items:
            $ref: '#/definitions/controllers.ExamAnswer'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Answer'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Submit exam answers
      tags:
      - student-courses
  /student_courses/createStudentCourse:
    post:
      consumes:
      - application/json
      description: Create a new student course enrollment
      parameters:
      - description: Student course enrollment information
        in: body
        name: studentCourse
        required: true
        schema:
          $ref: '#/definitions/models.StudentCourse'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.StudentCourse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create student course enrollment
      tags:
      - student-courses
  /student_courses/get:
    post:
      consumes:
      - application/json
      description: Retrieve a specific student course enrollment
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: integer
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StudentCourse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get student course enrollment
      tags:
      - student-courses
  /student_courses/updateStudentCourse:
    put:
      consumes:
      - application/json
      description: Update an existing student course enrollment
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: integer
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      - description: Updated student course information
        in: body
        name: studentCourse
        required: true
        schema:
          $ref: '#/definitions/models.StudentCourse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StudentCourse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update student course enrollment
      tags:
      - student-courses
  /students/CreateStudent:
    post:
      consumes:
      - application/json
      description: Register a new student in the system
      parameters:
      - description: Student information
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new student
      tags:
      - students
  /students/DeleteUser:
    delete:
      consumes:
      - application/json
      description: Delete a student from the system
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete student
      tags:
      - students
  /students/GetStudent:
    post:
      consumes:
      - application/json
      description: Retrieve a student's information by their ID
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get student by ID
      tags:
      - students
  /students/UpdateUser:
    put:
      consumes:
      - application/json
      description: Update a student's information
      parameters:
      - description: Student ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated student information
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Student'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update student
      tags:
      - students
  /students/all:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Student'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all students
      tags:
      - students
  /students/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user (teacher or student) and generate an access
        token
      parameters:
      - description: Login credentials (identifier (email or username) and password)
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns JWT token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication failed
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - authentication
  /subcats/DeleteSubCat:
    delete:
      consumes:
      - application/json
      description: Delete a subcategory by its ID
      parameters:
      - description: Subcategory ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a subcategory
      tags:
      - subcategories
  /subcats/GetSubCatsByCategory:
    post:
      consumes:
      - application/json
      description: Get all subcategories belonging to a specific category
      parameters:
      - description: Category ID
        in: path
        name: categoryId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubCat'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get subcategories by category
      tags:
      - subcategories
  /subcats/all:
    get:
      consumes:
      - application/json
      description: Retrieve all subcategories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubCat'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all subcategories
      tags:
      - subcategories
  /subcats/createSubCat:
    post:
      consumes:
      - application/json
      description: Create a new subcategory with the provided information
      parameters:
      - description: Subcategory information
        in: body
        name: subcategory
        required: true
        schema:
          $ref: '#/definitions/models.SubCat'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SubCat'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new subcategory
      tags:
      - subcategories
  /subcats/get:
    post:
      consumes:
      - application/json
      description: Get a subcategory by its ID
      parameters:
      - description: Subcategory ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SubCat'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a specific subcategory
      tags:
      - subcategories
  /subcats/updateSubCat:
    put:
      consumes:
      - application/json
      description: Update an existing subcategory's information
      parameters:
      - description: Subcategory ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated subcategory information
        in: body
        name: subcategory
        required: true
        schema:
          $ref: '#/definitions/models.SubCat'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SubCat'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a subcategory
      tags:
      - subcategories
  /teachers/CreateTeacher:
    post:
      consumes:
      - application/json
      description: Create a new teacher account with the provided information
      parameters:
      - description: Teacher information
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/models.Teacher'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Teacher'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new teacher
      tags:
      - teachers
  /teachers/DeleteTeacher:
    delete:
      consumes:
      - application/json
      description: Delete a teacher by their ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a teacher
      tags:
      - teachers
  /teachers/GetTeacher:
    post:
      consumes:
      - application/json
      description: Get a teacher by their ID
      parameters:
      - description: Teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Teacher'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a specific teacher
      tags:
      - teachers
  /teachers/all:
    get:
      consumes:
      - application/json
      description: Retrieve all teachers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Teacher'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all teachers
      tags:
      - teachers
  /teachers/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user (teacher or student) and generate an access
        token
      parameters:
      - description: Login credentials (identifier (email or username) and password)
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns JWT token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Authentication failed
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - authentication
  /videos/DeleteVideo:
    delete:
      consumes:
      - application/json
      description: Delete a video by its ID
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a video
      tags:
      - videos
  /videos/GetVideosByCourse:
    post:
      consumes:
      - application/json
      description: Get all videos belonging to a specific course
      parameters:
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Video'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get videos by course
      tags:
      - videos
  /videos/all:
    get:
      consumes:
      - application/json
      description: Retrieve all videos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Video'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all videos
      tags:
      - videos
  /videos/createVideo:
    post:
      consumes:
      - application/json
      description: Create a new video with the provided information
      parameters:
      - description: Video information
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/models.Video'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Video'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new video
      tags:
      - videos
  /videos/get:
    post:
      consumes:
      - application/json
      description: Get a video by its ID
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Video'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a specific video
      tags:
      - videos
  /videos/updateVideo:
    put:
      consumes:
      - application/json
      description: Update an existing video's information
      parameters:
      - description: Video ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated video information
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/models.Video'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Video'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update a video
      tags:
      - videos
swagger: "2.0"
